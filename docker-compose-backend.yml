version: '3.8'

services:
  gateway:
    image: ghcr.io/projekt-datascience/gateway:release
    restart: always
    ports:
      - "0.0.0.0:80:80"
    depends_on:
      - audit
      - user-management
    networks:
      - service-network

  audit:
    image: ghcr.io/projekt-datascience/backend-audit:release
    depends_on:
      db:
        condition: service_healthy
    networks:
      - service-network
    env_file:
      - .env

  user-management:
    image: ghcr.io/projekt-datascience/backend-user-management:release
    env_file:
      - .env
    networks:
      - service-network

  tasks:
    image: ghcr.io/projekt-datascience/backend-tasks:release
    env_file:
      - .env
    networks:
      - service-network

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - service-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-manager:
    image: dpage/pgadmin4:latest
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - 8080:80
    networks:
      - service-network

  manager:
    image: ghcr.io/projekt-datascience/manager:release
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - manager_volume:/root
    networks:
      - service-network

networks:
  service-network:

volumes:
  manager_volume: